ANGSTROM2BOHR = 1.889725989
HARTREE = 627.50947406

# Cut-off radii for ANI-1ccx_energy_clean dataset
CUTOFFS_EMP = {(1, 1): (0.00, 4.70),
               (1, 6): (0.00, 3.70),
               (1, 7): (0.00, 3.70),
               (1, 8): (0.00, 3.60),
               (6, 6): (0.00, 3.20),
               (6, 7): (0.00, 3.20),
               (6, 8): (0.00, 3.20),
               (7, 7): (0.00, 3.20),
               (7, 8): (0.00, 3.10),
               (8, 8): (0.00, 3.20)}
# CUTOFFS_SRT = {(1, 1): (0.68, 1.10),
#                (1, 6): (0.65, 1.86),
#                (1, 7): (0.62, 2.10),
#                (1, 8): (0.71, 1.85),
#                (6, 6): (1.09, 2.28),
#                (6, 7): (1.00, 2.23),
#                (6, 8): (1.05, 2.23),
#                (7, 7): (1.04, 2.23),
#                (7, 8): (0.98, 2.06),
#                (8, 8): (1.11, 2.23)}
CUTOFFS_SRT = {(1, 1): (0.00, 2.10),
               (1, 6): (0.00, 1.60),
               (1, 7): (0.00, 1.60),
               (1, 8): (0.00, 1.50),
               (6, 6): (0.00, 1.80),
               (6, 7): (0.00, 1.80),
               (6, 8): (0.00, 1.80),
               (7, 7): (0.00, 1.80),
               (7, 8): (0.00, 1.80),
               (8, 8): (0.00, 1.80)}
# CUTOFFS_MED = {(1, 1): (0.68, 3.30),
#                (1, 6): (0.65, 3.70),
#                (1, 7): (0.62, 3.70),
#                (1, 8): (0.71, 3.60),
#                (6, 6): (1.09, 3.20),
#                (6, 7): (1.00, 3.20),
#                (6, 8): (1.05, 3.20),
#                (7, 7): (1.04, 3.20),
#                (7, 8): (0.98, 3.10),
#                (8, 8): (1.11, 3.20)}
CUTOFFS_MED = {(1, 1): (0.00, 3.30),
               (1, 6): (0.00, 3.00),
               (1, 7): (0.00, 3.00),
               (1, 8): (0.00, 3.00),
               (6, 6): (0.00, 3.30),
               (6, 7): (0.00, 3.30),
               (6, 8): (0.00, 3.30),
               (7, 7): (0.00, 3.30),
               (7, 8): (0.00, 3.20),
               (8, 8): (0.00, 3.20)}
CUTOFFS_LNG = {(1, 1): (0.00, 4.80),
               (1, 6): (0.00, 3.70),
               (1, 7): (0.00, 3.70),
               (1, 8): (0.00, 3.70),
               (6, 6): (0.00, 4.00),
               (6, 7): (0.00, 4.00),
               (6, 8): (0.00, 4.00),
               (7, 7): (0.00, 3.80),
               (7, 8): (0.00, 3.80),
               (8, 8): (0.00, 3.80)}
CUTOFFS_EXT = {(1, 1): (0.63, 5.00),
               (1, 6): (0.60, 5.00),
               (1, 7): (0.59, 5.00),
               (1, 8): (0.66, 5.00),
               (6, 6): (1.04, 5.00),
               (6, 7): (0.95, 5.00),
               (6, 8): (1.00, 5.00),
               (7, 7): (0.99, 5.00),
               (7, 8): (0.93, 5.00),
               (8, 8): (1.06, 5.00)}
# CUTOFFS_EXT = {(1, 1): (0.00, 5.00),
#                (1, 6): (0.00, 5.00),
#                (1, 7): (0.00, 5.00),
#                (1, 8): (0.00, 5.00),
#                (6, 6): (0.00, 5.00),
#                (6, 7): (0.00, 5.00),
#                (6, 8): (0.00, 5.00),
#                (7, 7): (0.00, 5.00),
#                (7, 8): (0.00, 5.00),
#                (8, 8): (0.00, 5.00)}
CUTOFFS_FUL = {(1, 1): (0.00, 10.00),
               (1, 6): (0.00, 10.00),
               (1, 7): (0.00, 10.00),
               (1, 8): (0.00, 10.00),
               (6, 6): (0.00, 10.00),
               (6, 7): (0.00, 10.00),
               (6, 8): (0.00, 10.00),
               (7, 7): (0.00, 10.00),
               (7, 8): (0.00, 10.00),
               (8, 8): (0.00, 10.00)}
CUTOFFS_BLD = {(1, 1): (0.68, 1.10, 3.30),
               (1, 6): (0.65, 1.86, 3.70),
               (1, 7): (0.62, 2.10, 3.70),
               (1, 8): (0.71, 1.85, 3.60),
               (6, 6): (1.09, 2.28, 3.20),
               (6, 7): (1.00, 2.23, 3.20),
               (6, 8): (1.05, 2.23, 3.20),
               (7, 7): (1.04, 2.23, 3.20),
               (7, 8): (0.98, 2.06, 3.10),
               (8, 8): (1.11, 2.23, 3.20)}

# Cut-off radii for Au_energy_clean dataset
CUTOFFS_AST = {(1, 1): (0.00, 2.10),
               (1, 6): (0.00, 1.60),
               (1, 7): (0.00, 1.70),
               (1, 8): (0.00, 1.50),
               (6, 6): (0.00, 1.80),
               (6, 7): (0.00, 1.80),
               (6, 8): (0.00, 1.80),
               (7, 7): (0.00, 1.80),
               (7, 8): (0.00, 1.80),
               (8, 8): (0.00, 1.80),
               (1, 79): (0.00, 3.50),
               (6, 79): (0.00, 2.70),
               (7, 79): (0.00, 2.70),
               (8, 79): (0.00, 2.70),
               (79, 79): (0.00, 3.40)}
CUTOFFS_AMD = {(1, 1): (0.00, 3.30),
               (1, 6): (0.00, 3.20),
               (1, 7): (0.00, 3.00),
               (1, 8): (0.00, 3.00),
               (6, 6): (0.00, 2.80),
               (6, 7): (0.00, 2.80),
               (6, 8): (0.00, 2.80),
               (7, 7): (0.00, 3.00),
               (7, 8): (0.00, 3.00),
               (8, 8): (0.00, 3.20),
               (1, 79): (0.00, 6.20),
               (6, 79): (0.00, 6.50),
               (7, 79): (0.00, 6.30),
               (8, 79): (0.00, 6.20),
               (79, 79): (0.00, 6.00)}
CUTOFFS_ALG = {(1, 1): (0.00, 4.60),
               (1, 6): (0.00, 3.90),
               (1, 7): (0.00, 3.70),
               (1, 8): (0.00, 3.60),
               (6, 6): (0.00, 4.20),
               (6, 7): (0.00, 4.00),
               (6, 8): (0.00, 4.00),
               (7, 7): (0.00, 4.00),
               (7, 8): (0.00, 3.80),
               (8, 8): (0.00, 3.70),
               (1, 79): (0.00, 10.00),
               (6, 79): (0.00, 10.00),
               (7, 79): (0.00, 10.00),
               (8, 79): (0.00, 10.00),
               (79, 79): (0.00, 7.50)}
CUTOFFS_AEX = {(1, 1): (0.63, 5.00),
               (1, 6): (0.60, 5.00),
               (1, 7): (0.59, 5.00),
               (1, 8): (0.66, 5.00),
               (6, 6): (1.04, 5.00),
               (6, 7): (0.95, 5.00),
               (6, 8): (1.00, 5.00),
               (7, 7): (0.99, 5.00),
               (7, 8): (0.93, 5.00),
               (8, 8): (1.06, 5.00),
               (1, 79): (1.00, 5.00),
               (6, 79): (1.00, 5.00),
               (7, 79): (1.00, 5.00),
               (8, 79): (1.00, 5.00),
               (79, 79): (1.00, 5.00)}
# CUTOFFS_AEX = {(1, 1): (0.00, 5.00),
#                (1, 6): (0.00, 5.00),
#                (1, 7): (0.00, 5.00),
#                (1, 8): (0.00, 5.00),
#                (6, 6): (0.00, 5.00),
#                (6, 7): (0.00, 5.00),
#                (6, 8): (0.00, 5.00),
#                (7, 7): (0.00, 5.00),
#                (7, 8): (0.00, 5.00),
#                (8, 8): (0.00, 5.00),
#                (1, 79): (0.00, 5.00),
#                (6, 79): (0.00, 5.00),
#                (7, 79): (0.00, 5.00),
#                (8, 79): (0.00, 5.00),
#                (79, 79): (0.00, 5.00)}
CUTOFFS_AFL = {(1, 1): (0.00, 10.00),
               (1, 6): (0.00, 10.00),
               (1, 7): (0.00, 10.00),
               (1, 8): (0.00, 10.00),
               (6, 6): (0.00, 10.00),
               (6, 7): (0.00, 10.00),
               (6, 8): (0.00, 10.00),
               (7, 7): (0.00, 10.00),
               (7, 8): (0.00, 10.00),
               (8, 8): (0.00, 10.00),
               (1, 79): (0.00, 10.00),
               (6, 79): (0.00, 10.00),
               (7, 79): (0.00, 10.00),
               (8, 79): (0.00, 10.00),
               (79, 79): (0.00, 10.00)}

# Mapping from natural language to cut-off radii dictionaries
CUTOFFS = {"empirical": CUTOFFS_EMP.copy(),
           "short": CUTOFFS_SRT.copy(),
           "medium": CUTOFFS_MED.copy(),
           "long": CUTOFFS_LNG.copy(),
           "extend": CUTOFFS_EXT.copy(),
           "full": CUTOFFS_FUL.copy(),
           "blend": CUTOFFS_BLD.copy(),
           "au_short": CUTOFFS_AST.copy(),
           "au_medium": CUTOFFS_AMD.copy(),
           "au_long": CUTOFFS_ALG.copy(),
           "au_extend": CUTOFFS_AEX.copy(),
           "au_full": CUTOFFS_AFL.copy()}

TARGETS = {'dt': 'dftb.energy',  # Dftb Total
           'de': 'dftb.elec_energy',  # Dftb Electronic
           'dr': 'dftb.rep_energy',  # Dftb Repulsive
           'pt': 'dftb_plus.energy',  # dftb Plus Total
           'pe': 'dftb_plus.elec_energy',  # dftb Plus Electronic
           'pr': 'dftb_plus.rep_energy',  # dftb Plus Repulsive
           'hd': 'hf_dz.energy',  # Hf Dz
           'ht': 'hf_tz.energy',
           'hq': 'hf_qz.energy',
           'wd': 'wb97x_dz.energy',  # Wb97x Dz
           'wt': 'wb97x_tz.energy',
           'md': 'mp2_dz.energy',  # Mp2 Dz
           'mt': 'mp2_tz.energy',
           'mq': 'mp2_qz.energy',
           'td': 'tpno_ccsd(t)_dz.energy',  # Tpno Dz
           'nd': 'npno_ccsd(t)_dz.energy',  # Npno Dz
           'nt': 'npno_ccsd(t)_tz.energy',
           'cc': 'ccsd(t)_cbs.energy'}
